# ====================================================
# Basic server setup
# ====================================================
---
- hosts: localhost
  become: yes
  tasks: 
    
    - name: Add 8.8.8.8 to resolv.conf to fix macvlan stuff
      lineinfile: path=/etc/resolv.conf
        insertbefore="^nameserver"
        line="nameserver 8.8.8.8"

    - name: install essential packages
      apt: 
        name:   
          - git
          - software-properties-common
          - python3-pip
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
        update_cache: yes
        
    - name: Install the gpg key for docker
      apt_key:
        url: "https://download.docker.com/linux/debian/gpg"
        state: present

    - name: install docker repo
      apt_repository:
        repo: "deb [arch=arm64] https://download.docker.com/linux/debian buster stable"
        state: present
        
    - name: Remove old docker
      apt: 
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: absent          
        update_cache: yes
        
    - name: Install docker
      apt: 
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io   
        update_cache: yes
      register: apt_status
      until: apt_status is success
      retries: 2
      delay: 5

    - name: install all packages
      apt: 
        name:
            - docker-compose
            - rclone  
            - appstream
            - attr
            - linux-headers-$(uname -r)
            - linux-image-amd64
            - spl
            - kmod
            - zfsutils-linux
            - zfs-dkms 
            - zfs-zed
            - autoconf
            - automake
            - autopoint
            - autotools-dev
            - bind9-host
            - cgroupfs-mount
            - cmdtest
            - crda
            - discover
            - discover-data
            - dns-root-data
            - dnsmasq-base
            - dnsutils
            - doc-debian
            - emacsen-common
            - exfat-fuse
            - exfat-utils
            - exim4-base
            - exim4-config
            - exim4-daemon-light
            - fd-find
            - ffmpeg
            - fontconfig
            - fonts-dejavu-core
            - gdisk
            - hdparm
            - htop
            - iw
            - kbd
            - keyboard-configuration
            - laptop-detect
            - locales
            - lsof
            - lz4
            - m4
            - mailutils
            - mailutils-common
            - make
            - man-db
            - mariadb-common
            - mdadm
            - modemmanager
            - mokutil
            - mysql-common
            - neovim
            - netcat-traditional
            - network-manager
            - nmap
            - nmap-common
            - os-prober
            - pciutils
            - picocom
            - pkg-config
            - plocate
            - powermgmt-base
            - ppp
            - protobuf-compiler
            - psmisc
            - python3
            - reportbug
            - ripgrep
            - rsync
            - runit-helper
            - screen
            - shim-signed-common
            - shim-unsigned
            - smartmontools
            - tdb-tools
            - tini
            - tmux
            - traceroute
            - udisks2
            - unattended-upgrades
            - unzip
            - wireless-regdb
            - x11-common
            - xclip
            - xkb-data
            - zsh
            - zsh-common
            - bat
            - g++
            - libncurses-dev
        state: latest
        update_cache: yes
        
    # - name: Install vimplug
    #  shell: sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
        
    - name: Download fzf
      git:
        repo: https://github.com/junegunn/fzf.git
        dest: /root/.fzf
        
    - name: Installing fzf
      shell: yes | /root/.fzf/install
          
    - name: Installing oh-my-zsh
      shell: yes | sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" --unattended
     
    - name: Install powerlevel10k theme
      shell: yes | sh -c "$(git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k)" --unattended

    - git:
        repo: https://github.com/mobile-shell/mosh.git
        dest: /root/.mosh
     
    - name: autogen mosh configure file
      command: ./autogen.sh
      args:
        chdir: /root/.mosh

    - name: configure mosh build
      command: ./configure
      args:
        chdir: /root/.mosh

    - name: Build mosh
      command: make
      args:
        chdir: /root/.mosh

    - name: Install mosh
      command: make install
      args:
        chdir: /root/.mosh

    - name: Add github identity
      copy:
        dest: "/root/.gitconfig"
        content: |
          [user]
            name = mcondren
            email = mcondren@gmail.com
      
    - name: Export zsh DOTFILE location system-wide
      lineinfile: dest=/etc/zsh/zshenv
                  regexp="^export"
                  line="export ZDOTDIR=$HOME/.config/zsh"
                  state=present
          
    - name: Copy .zshrc to $HOME
      copy:
        src: "/etc/zsh/zshenv"
        dest: "/root/.zshenv"
                  
    - name: Adding github key
      shell: |
        eval `ssh-agent -s`
        ssh-add /root/.ssh/github
      
    - name: Clone dotfiles repo
      git:
        repo: git@github.com:mcondren/.config.git
        version: main
        dest: /root/.config
        key_file: /root/.ssh/github
        accept_hostkey: yes
      # ssh-agent doesn't allow key to pass through remote sudo commands.
      become: no
      
    - name: Clone docker repo
      git:
        repo: git@github.com:mcondren/docker.git
        version: master
        dest: /root/docker
        key_file: /root/.ssh/github
        accept_hostkey: yes
      # ssh-agent doesn't allow key to pass through remote sudo commands.
      become: no
 
    - name: Set Crontab env variable for rclone/rsync
      cron:
        name: SSH_AUTH_SOCK
        env: yes
        job: /tmp/ssh-agent-root-cron

    - name: Add weekly rclone backup job to crontab
      cron:
        name: "rclone backup"
        special_time: weekly
        job: "/usr/bin/rclone sync /backup/docker crypt:backup/docker" 

    - name: Add weekly zpool scrub to crontab
      cron:
        name: "zpool scrub"
        special_time: weekly
        job: "zpool scrub backup"

    - name: Upgrade all packages
      apt: upgrade=safe

  
  
